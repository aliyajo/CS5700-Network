#!/usr/bin/env -S python3 -u

import struct

def aggregation(forwarding_table, ip1, ip2):
    print(forwarding_table[ip1])
    

def main():
    forwarding_table = {
     "192.168.1.0/24": {
         "192.168.0.2": {
             "netmask": "255.255.255.0",
             "dst": "192.168.0.1",
             "ASPath": [
                 16,
                 1
             ],
             "localpref": 100,
             "origin": "EGP",
             "SelfOrigin": True,
             "relation": "cust",
             "network_ip": "192.168.1.0"
         }
     },
     "172.169.0.0/16": {
         "172.168.0.2": {
             "netmask": "255.255.0.0",
             "dst": "172.168.0.1",
             "ASPath": [
                 16,
                 2
             ],
             "localpref": 100,
             "origin": "EGP",
             "SelfOrigin": True,
             "relation": "cust",
             "network_ip": "172.169.0.0"
         },
         "10.0.0.2": {
             "netmask": "255.255.0.0",
             "dst": "10.0.0.1",
             "ASPath": [
                 16,
                 3,
                 2
             ],
             "localpref": 100,
             "origin": "EGP",
             "SelfOrigin": False,
             "relation": "cust",
             "network_ip": "172.169.0.0"
         }
     },
     "11.0.0.0/8": {
         "10.0.0.2": {
             "netmask": "255.0.0.0",
             "dst": "10.0.0.1",
             "ASPath": [
                 16,
                 3
             ],
             "localpref": 100,
             "origin": "EGP",
             "SelfOrigin": True,
             "relation": "cust",
             "network_ip": "11.0.0.0"
         }
     }
}
    
    for network in forwarding_table:
        if len(forwarding_table[network]) > 1:
            for source in forwarding_table[network]:
                for other_source in forwarding_table[network]:
                    if source != other_source:
                        print(aggregation(forwarding_table, other_source, source))
                        
                
                
    
if __name__ == "__main__":
    main()



  
